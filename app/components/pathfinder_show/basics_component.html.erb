<%= render(CardComponent.new(
  title: "basics",
  svg: "M4 22a8 8 0 1 1 16 0H4zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6 6 2.685 6 6-2.685 6-6 6z",
  tabs: ["character", "dices", "server"]
)) do %>
  <div id="basicsTabContent">
    <%= render(CardTabComponent.new(tab: "character", hidden: false)) do %>
      <div class="md:py-3">
        <div class="flex flex-col md:flex-row">
          <div class="flex justify-center md:basis-64 relative w-full h-64">
            <%= image_tag @character.character_image, id:"character-image", class: "absolute -top-3 md:-top-0 md:-left-6 rounded-full drop-shadow-lg w-64 h-64 bg-white" if @character.character_image.attached? %>
          </div>
          <div class="space-y-6 p-6 md:p-0 flex-1">
            <h1 id="character-name" class="md:mt-6 text-3xl" data-id="<%= @character.id %>">
              <%= @character.pathfinder_basic.name %>
            </h1>
            
            <h2 class="text-2xl">
              <%= @character.pathfinder_basic.class_name %>
              <%= @character.pathfinder_basic.level %>
            </h2>

            <div class="flex space-x-4">
              <%= render(TitleWithContentComponent.new(title: "Perception", _class: "italic", bar: true)) do%>
                <%= get_perception @character %>
              <% end %>

              <%= render(TitleWithContentComponent.new(title: "Land Speed", _class: "italic")) do%>
                <%= render(PopoverComponent.new(name: "speed", content_popover: @character.pathfinder_basic.speed_note)) do%>
                  <%= @character.pathfinder_basic.speed %>
                <% end %>
              <% end %>
            </div>
          </div>
        </div>
      </div>

      <div class="p-6 flex flex-wrap gap-3">
        <%= render(TitleWithContentComponent.new(title: "Aligment", _class: "italic", bar: true)) do%>
          <%= @character.pathfinder_basic.alignment %>
        <% end %>
    
        <%= render(TitleWithContentComponent.new(title: "Size", _class: "italic", bar: true)) do%>
          <%= @character.pathfinder_basic.size %>
        <% end %>
        
        <%= render(TitleWithContentComponent.new(title: "Ancestry", _class: "italic", bar: true)) do%>
          <%= @character.pathfinder_basic.ancestry %>
        <% end %>
        
        <%= render(TitleWithContentComponent.new(title: "Heritage", _class: "italic", bar: true)) do%>
          <%= render(PopoverComponent.new(name: "heritage", content_popover: @character.pathfinder_basic.heritage_note )) do%>
            <%= @character.pathfinder_basic.heritage %>
          <% end %>
        <% end %>
        
        <%= render(TitleWithContentComponent.new(title: "Background", _class: "italic", bar: true)) do%>
          <%= @character.pathfinder_basic.background %>
        <% end %>
        
        <%= render(TitleWithContentComponent.new(title: "Deity", _class: "italic", bar: true)) do%>
          <%= @character.pathfinder_basic.deity %>
        <% end %>
    
        <%= render(TitleWithContentComponent.new(title: "Age", _class: "italic", bar: true)) do%>
          <%= @character.pathfinder_basic.age %>
        <% end %>
    
        <%= render(TitleWithContentComponent.new(title: "Hero Points", _class: "italic")) do%>
          <%= @character.pathfinder_basic.hero_points %>
        <% end %>

      </div>
      <!--  -->
      <div class="px-6 pb-6">
        <%= render(TitleWithContentComponent.new(title: "Description", _class: "italic")) do%>
          <%= @character.pathfinder_basic.description %>
        <% end %>
      </div>
    <% end %>

    <%= render(CardTabComponent.new(tab: "dices", hidden: true)) do %>
      <div class="flex flex-col md:flex-row mm:p-6 mm:space-x-3">
        <div class="flex-none font-bold text-lg text-rose-700 w-40 dark:text-rose-500">
          Macros
        </div>
        <div class="space-y-3 w-full">
          <div class="grid mm:grid-cols-2 md:grid-cols-3 gap-4 w-full">
            <% @character.dices.each do |dice| %>
            <div class="cursor-pointer hover:bg-rose-300/50 hover:dark:bg-rose-700/30 flex justify-between border-b-2 border-gray-300 dark:border-gray-500"
              data-action="click->drawer#toggleDrawerMacro"
              data-drawer-name-param="<%= dice.name %>"
              data-drawer-notation-param="<%= format_macro_notation(@character, dice.notation) %>"
              data-drawer-note-param="<%= dice.notes %>"
              data-drawer-character-id-param="<%= @character.id %>">
              <p>
                <%= dice.name %>
              </p>
              <p>
                <%= format_macro_notation(@character, dice.notation) %>
              </p>
            </div>
            <% end %>
          </div>
        </div>
      </div>
    <% end %>

    <%= render(CardTabComponent.new(tab: "server", hidden: true)) do %>
      <div class="mx-auto w-full max-w-sm bg-transparent rounded-lg border border-gray-200 shadow-md sm:p-6 md:p-8 dark:border-gray-700">
        <div class="space-y-6 text-sm text-gray-900 dark:text-gray-300" data-channels--character-target="formServer">
          <div data-channels--character-target="warning">
            
          </div>
          <div>
            <label for="server-name" class="block mb-2 font-medium">Server name</label>
            <input type="text" name="server-name" id="server-name" class="bg-gray-50 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" data-channels--character-target="serverName">
          </div>
          <div>
            <label for="password" class="block mb-2 font-medium">Password</label>
            <input type="password" name="password" id="password" placeholder="" class="bg-gray-50 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" data-channels--character-target="password">
          </div>
          <button type="submit" class="w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" data-action="channels--character#startServer">Connect</button>
        </div>
        <button class="hidden space-y-6" data-channels--character-target="terminateButton" data-action="channels--character#sendCharacterExit">
          Stop Server
        </button>
      </div>
    <% end %>
  </div>
<% end %>
